name: Build and deploy an app to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "wisecowregistery"
  CONTAINER_NAME: "dockerfile"
  RESOURCE_GROUP: "wisecow-resource-group"
  CLUSTER_NAME: "wisecow-cluster"
  DEPLOYMENT_MANIFEST_PATH: "/"

jobs:
  buildImage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/CLI@v1
        with:
          azcliversion: 'latest'

      - name: Azure Login
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }}

  deploy:
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/CLI@v1
        with:
          azcliversion: 'latest'

      - name: Azure Login
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
